@model Web.Models.TipoBungalow
@using Web.Models

@{
    ViewBag.Title = "Mantener tipo de bungalow";
}

<h1>@ViewBag.Title</h1>

<fieldset>
 <legend>Datos del Formulario</legend>  
 @using (Html.BeginForm("InsertarTipoBungalow", "Logistica", FormMethod.Post, new { @id = "Form" }))
 {
    <form>
    <ul>
        <li>
            <div class="editor-label">@Html.LabelFor(p => p.id)</div>
            @Html.TextBoxFor(p => p.id, new { @readonly = "readonly" })
      
        </li><li>
            <div class="editor-label">@Html.LabelFor(p => p.nombre)</div>
            @Html.TextBoxFor(p => p.nombre)
        </li><li>
            <div class="editor-label">@Html.LabelFor(p => p.descripcion)</div>
            @Html.TextBoxFor(p => p.descripcion)
        </li><li> 
            <div class="editor-label">@Html.LabelFor(p => p.precio)</div>
            @Html.TextBoxFor(p => p.precio)
        </li><li>
             <div class="editor-label">@Html.LabelFor(p => p.capacidad)</div>
            @Html.TextBoxFor(p => p.capacidad)
        </li><li>
             <div class="editor-label">@Html.LabelFor(p => p.nrohabitaciones)</div>
            @Html.TextBoxFor(p => p.nrohabitaciones)
        </li><li>
            @Html.TextBoxFor(p => p.estado, new {@style = "display: none;"})
        </li>
        
    </ul>
  <div id="botones">
  <input type="button" value= "Limpiar"  id="cancel" onclick="location.href = '@(Url.Action("MantenerTipobungalow", "Logistica"))'" class="button fright"/>
  <input type="submit" value=@(Model == null || Model.id == 0 ? "Insertar" : "Modificar" ) />
  </div>
  
         @if (ViewData["message"] != null && ViewData["message"].Equals("eliminaTipo"))
         {
         <script type="text/javascript">
             alert("Lo sentimos!\n No se puede eliminar este Tipo de Bungalows porque ya hay Bungalows asociados a este Tipo")</script>
         }
         else if (ViewData["message"] != null)
         {
             <script type="text/javascript">
                alert("@ViewData["message"]");
             </script>
         }

  </form> 
 }
  </fieldset>

  <div id="kendotable">
@(Html.Kendo().Grid<Web.Models.TipoBungalow>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.nombre).Title("Nombre");
            //.Filterable(filterable => filterable.UI("nombreFiltro"));
        columns.Bound(p => p.precio).Title("Precio");
        columns.Bound(p => p.capacidad).Title("Capacidad");
            //.Filterable(filterable => filterable.UI("areaFiltro"));
        columns.Bound(p => p.descripcion).Title("Descripcion");
        columns.Command(command => { command.Custom("Editar").Text("<span class='k-icon k-edit'></span>").Click("onChange"); command.Custom("Eliminar").Text("<span class='k-icon k-delete'></span>").Click("elimina"); });

    })
     .Editable(editable => { editable.Mode(GridEditMode.InLine); editable.DisplayDeleteConfirmation("El regitro será eliminado ¿Desea continuar?"); })
     .Pageable()
     .Sortable()
     .Filterable(filterable => filterable
        .Extra(false)
        .Operators(operators => operators
            .ForString(str => str.Clear()
                .Contains("Contiene")
                .StartsWith("Empezar con")
                .IsEqualTo("Es igual a")
                .IsNotEqualTo("Diferente a"))
            .ForNumber(number => number.Clear()
                .IsGreaterThan("Es mayor a")
                .IsLessThan("Es menor a")
                .IsEqualTo("Es igual a")
                .IsNotEqualTo("Es diferente a"))
      
        )
    )
    .DataSource(datasource => datasource
        .Ajax()
        .Events(events => events.Error("ErrorMessage"))
        .Model(model => model.Id(p => p.id))
            .Read(read => read.Action("LeerTipoBungalows", "Logistica"))
        .Destroy(update => update.Action("eliminarTipoBungalow", "Logistica"))
                                    
    )
    .Selectable()
)
</div>

<script type="text/javascript">
jQuery.validator.addMethod("accept2", function(value, element, param) {
  return value.match(new RegExp("^" + param + "$"));
});


$("#Form").validate({
		rules: {
			nombre: {
				required: true,
                maxlength: 50,
                accept2: "[a-zA-ZáéíóúñÑ ]+"
                },
            descripcion: {
                required: true,
                maxlength: 150,
                accept2: "[a-zA-ZáéíóúñÑ 0-9.,; ]+"
                },
            capacidad:  {
                required: true,
                digits: true,
                range: [0,10]
                },
            precio: {
                required: true,
                number: true,
                range: [0,300]
                },
            nrohabitaciones: {
                required: true,
                digits: true,
                range: [0,6]
                },
            },
		messages: {
			nombre: {
                required: "*Campo obligatorio",
                maxlength: "Tamaño máx. 50 caracteres",
                accept2: "Solo se permiten letras"
                },			
			descripcion: {
				required: "*Campo obligatorio",
                maxlength: "Ingrese 150 caracteres como máximo",
                accept2: "Esta usando un caracter no permitido"     
			    },
            capacidad: {
                 required: "*Campo obligatorio",
                digits: "Ingrese solo dígitos",
                range:"Ingrese un numero entre 0 y 10"  
                },
            precio: {
                 required: "*Campo obligatorio",
                 number: "Ingrese solo dígitos",
                 range:"Ingrese un numero entre 0 y 300"  
                },
             nrohabitaciones: {
                 required: "*Campo obligatorio",
                digits: "Ingrese solo dígitos",
                range:"Ingrese un numero entre 0 y 6"  
                }
		},
        submitHandler: function ConfirmationBox(form) {
        var result = confirm("¿Está seguro de realizar los cambios?");
        if (result == true) {
            form.submit();
            return true;
        }
        else {
            return false;
            }
        }
		
});

    function ErrorMessage(e) {
            alert("Ha ocurrido un error en el servidor! Vuelva a intentar la operación en unos minutos.");
    }

function elimina(e){e.preventDefault();
    var grid = $('#Grid').data('kendoGrid');
    var row = grid.select();
    var dataItem = grid.dataItem(row);
    var id = dataItem.id;
    location = "@Url.Action("EliminarTipoBungalow")" + "?id=" + id;}




function onChange(e){
    e.preventDefault();
    var grid = $('#Grid').data('kendoGrid');
    var row = grid.select();
    var dataItem = grid.dataItem(row);
    var id = dataItem.id;
    location = "@Url.Action("EditarTipoBungalow")" + "?id=" + id;
}

</script>