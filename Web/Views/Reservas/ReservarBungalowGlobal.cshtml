@model Web.Models.ReservaBungalow

@{
    ViewBag.Title = "ReservarBungalowGlobal";
}

@if (ViewData["errorMessage"] != null)
{
<script type="text/javascript">
    alert("@ViewData["errorMessage"]");
</script>
<h1>Error en Reserva Bungalow</h1>
}
else 
{
    if (ViewData["message2"] != null)
    {
        <script type="text/javascript">
        if(confirm("@ViewData["message2"]"))
        {
            location = "@Url.Action("ReservarBungalowSorteo","Reservas")"+"?idTemporada="+@ViewData["idTemporada"]+"&idBungalow="+@ViewData["idBungalow"];
        }
        </script>
    }
    if (ViewData["message"] != null)
    {
    <script type="text/javascript">
        alert("@ViewData["message"]");
    </script>
    <h1>Error en Reserva Bungalow</h1>
    }
<fieldset>
    <legend>Consultar disponibilidad Bungalow</legend>
    @using (Html.BeginForm("ReservarBungalowGlobal", "Reservas", FormMethod.Post, new { @id = "Form" }))
    {
        <ul class="col-one">
            <li>
                <div id = "labelid" name = "labelid" />
                <div id = "labelsede" name = "labelsede" />
                <div id = "labelid1" name = "labelid1" />
                @(Html.Label("Número Familia"))
                @(Html.Kendo().AutoCompleteFor(p => p.familia.id)
                        .Name("AutocompleteId")
                        //.BindTo("familia.id")
                        .DataTextField("id")
                        .Filter("Contiene")
                        .HighlightFirst(true)
                        .MinLength(3)
                        .HtmlAttributes(new { style = "width:155px" })
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("LeerFamilias", "Reservas");
                            })
                            .ServerFiltering(true);
                        })
                )
            </li><li>
                @(Html.Label("Sede"))
                @(Html.Kendo().DropDownList()
                      .Name("sede")
                      .HtmlAttributes(new { style = "width: 150px" })
                      .DataTextField("nombre")
                      .DataValueField("id")
                      .OptionLabel("--Seleccionar--")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("ObtenerSedes", "Reservas");
                          });
                      })
                      .Events(ev => ev.Close((@<text>
                          function(e) {
                            cambioMapa(this.value());
                          }</text>)))
            )
            @(Html.TextBox("Sede", null, new { style = "display: none;" }))
            </li><li>
                @(Html.Label("Número de Bungalow"))
                @(Html.Kendo().DropDownList()
                      .Name("id")
                      .HtmlAttributes(new { style = "width: 150px" })
                      .DataTextField("numero")
                      .DataValueField("id")
                      .OptionLabel("--Seleccionar--")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("ObtenerBungalow", "Reservas")
                                  .Data("filtrarBungalows");
                          })
                          .ServerFiltering(true);
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("sede")
                      .Events(ev => ev.Close((@<text>
                          function(e) {
                            document.getElementsByName('bungalow.id')[0].value=this.value();
                          }</text>)))
        )
            </li><li>
                @(Html.Label("Fecha Inicio"))
                @(Html.Kendo().DatePicker()
                    .Name("finicial") //The name of the datepicker is mandatory. It specifies the "id" attribute of the widget.
                    .HtmlAttributes(new { style = "width:150px" })
                    .Min(DateTime.Today) //Set min date of the datepicker
                    .Max(new DateTime(2015, 12, 31)) //Set min date of the datepicker
                    .Value(DateTime.Today) //Set the value of the datepicker
                    .Events(e => e.Change("startChange"))
                )
            </li><li>
                @(Html.Label("Fecha Final"))
                @(Html.Kendo().DatePicker()
                    .Name("ffinal") //The name of the datepicker is mandatory. It specifies the "id" attribute of the widget.
                    .HtmlAttributes(new { style = "width:150px" })
                    .Enable(false)
                    .Min(DateTime.Today) //Set min date of the datepicker
                    .Max(new DateTime(2015, 12, 31)) //Set min date of the datepicker
                    .Value(DateTime.Today) //Set the value of the datepicker
                    .Events(e => e.Change("endChange"))
                )
            </li><li>
                @(Html.TextBoxFor(p => p.bungalow.sede.id, null, new { style = "display: none;" }))
                @(Html.TextBoxFor(p => p.bungalow.id, null, new { style = "display: none;" }))
                
            </li>
        </ul><ul class="col-two">
            <li>
                <img id="img" src="../Content/img/SeleccionarSede.png" width="400" height="250" />                  
            </li>
        </ul>
        <div id="botones">
            <input type="button" value="Consultar Disponibilidad" id="cdisponibilidad" onclick="Javascript: verdisponibilidad() "   />
            <input type="submit" value="Agregar" id="agregar"/>
            <input type="button" value="Limpiar" id="limpiar" onclick="Javascript: AbrirPopup() "   />
        </div>
    }
</fieldset>
@(Html.Kendo().Grid<Web.Models.ReservaBungalow>()
    .Name("Reserva")
    .Columns(columns =>
    {
        //columns.Bound(p => p.id).Visible(true).Width(100);
        columns.Bound(p => p.bungalow.sede.nombre);
        columns.Bound(p => p.bungalow.numero).Title("Número de Bungalow");
        columns.Bound(p => p.familia.id);
        columns.Bound(p => p.fechaInicio).Format("{0:dd}/{0:MM}/{0:yyyy}");
        columns.Bound(p => p.fechaFin).Format("{0:dd}/{0:MM}/{0:yyyy}");
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
           <div class="toolbar">
                    <label class="category-label" for="category">Seleccione la fecha de Inicio:</label>
                        @(Html.Kendo().DatePicker()
                            .Name("fginicial") //The name of the datepicker is mandatory. It specifies the "id" attribute of the widget.
                            .HtmlAttributes(new { style = "width:150px" })
                            .Max(new DateTime(2015, 12, 31)) //Set min date of the datepicker
                            .Value(DateTime.Today) //Set the value of the datepicker
                                    .Events(e => e.Change("categoriesChange"))
                        )
             </div>
        </text>);
    })
    .HtmlAttributes(new { style = "height: 430px" })
    .Pageable()
    .Sortable()
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Model(model => model.Id(p => p.id))
        .Read("LeerReservasGlobal", "Reservas")
    )
)

<script>
    function categoriesChange() {
        var value = this.value(),
		 	 grid = $("#Reserva").data("kendoGrid");

        if (value) {
            grid.dataSource.filter({ field: "fechaInicio", operator: "gte", value: Date.parse(value) });
        } else {
            grid.dataSource.filter({});
        }
    }
</script>
 <script>
     function filtrarBungalows() {
         return {
             sede: $("#sede").val()
         };
     }
        </script>
<script>
    function startChange() {
        var endPicker = $("#ffinal").data("kendoDatePicker"),
            startDate = this.value();
        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
            $('#ffinal').data('kendoDatePicker').enable(true);
            endPicker.value(startDate)
        }
    }

    function endChange() {
        var startPicker = $("#finicial").data("kendoDatePicker"),
            endDate = this.value();
        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
        }
    }

    function verdisponibilidad(){
        var idBungalow = document.getElementsByName('bungalow.id')[0].value;
        var finicial = $('#finicial').val();
        var ffinal = $('#ffinal').val();
        $.ajax({
            url: '@Url.Action("VerDisponibilidad")',
            type: 'POST',
            datatype: "json",
            traditional: true,
            data: {
                sidBungalow: JSON.stringify(idBungalow),
                sfinicial: JSON.stringify(finicial),
                sffinal:  JSON.stringify(ffinal),
            },
            success: function(data, textStatus, xhr)
            {
                    alert(data);
                
            },
            error: function (xhr, textStatus, exceptionThrown) {  
                alert($.parseJSON(xhr.responseText));
            }
            //timeout: 20000
        });
    }

    function obtenerUrlMapa(value) {
        $.ajax({
            url: '@Url.Action("ObtenerUrlImagen")',
            type: 'POST',
            datatype: "json",
            traditional: true,
            data: {
                id: JSON.stringify(value),
            },
            success: function (valor) {
                models = [];
                document.getElementById("img").src = valor;
            },
            error: function (event, request, settings) {
                models = [];
                window.alert("Ocurrió un error en su transacción");
            },
            timeout: 20000
        });
    }

    function cambioMapa(id) {
        if(id != ""){
            document.getElementsByName('Sede')[0].value = id;
            document.getElementById("img").src = obtenerUrlMapa(id);
            document.getElementsByName('bungalow.sede.id')[0].value=id;
        }else{
            document.getElementById("img").src = "../Content/img/SeleccionarSede.png"
            document.getElementsByName('Sede')[0].value = "-1";
        }
    }

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('.submit').click(function () {
            validateForm();
        });

        function validateForm() {


            var nameReg = /^[A-Za-z]+$/;
            var numberReg = /^[0-9]+$/;

            var id = $('#AutocompleteId').val();
            var finicial = $('#Sede').val();
            var ffinal = $('#id').val();

            var inputVal = new Array(id, finicial, ffinal);

            var inputMessage = new Array("id", "finicial", "ffinal");

            $('.error').hide();

            if (inputVal[0] == "") {
                $('#labelid').after('<span class="error"> Please enter your ' + inputMessage[0] + '</span>');
            }
            else if (!numberReg.test(names)) {
                $('#labelid').after('<span class="error"> Numbers only</span>');
            }

            if (inputVal[1] == "") {
                $('#labelsede').after('<span class="error"> Please enter your ' + inputMessage[1] + '</span>');
            }

            if (inputVal[2] == "") {
                $('#labelid1').after('<span class="error"> Please enter your ' + inputMessage[2] + '</span>');
            }
        }   
    });
    
   </script>
}

