@model Web.Models.Concesionario
@using Web.Models
@{
    ViewBag.Title = "Mantener Concesionario";
}

<h1>@ViewBag.Title</h1>

<fieldset>
    <legend>Datos del concesionario</legend>
    @using (Html.BeginForm("InsertarConcesionario", "Logistica", FormMethod.Post, new { @id = "form" }))
    {
        <ul>
            <li>
                <div class="editor-label">@Html.LabelFor(p => p.id)</div>
                @Html.TextBoxFor(p => p.id, new { @readonly = "readonly" })
            </li><li>
                <div class="editor-label">@Html.LabelFor(p => p.nombre)</div>
                @Html.TextBoxFor(p => p.nombre)
             
            </li><li>
                <div class="editor-label">@Html.LabelFor(p => p.direccion)</div>
                @Html.TextBoxFor(p => p.direccion)
             
            </li><li>
                <div class="editor-label">@Html.LabelFor(p => p.ruc)</div>
                @Html.TextBoxFor(p => p.ruc)
           
            </li><li class="long">
                <div class="editor-label">@Html.LabelFor(p => p.sedes)</div>
                @(Html.Kendo().MultiSelectFor(p => p.sedesAux)
                    .DataTextField("nombre")
                    .DataValueField("id")
                    .Placeholder("--Seleccionar--")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("LeerTipoBungalows", "Logistica");
                        }).Events(e => e.Error("ErrorMessage"));
                    })
                    .Value(Model != null ? Sede.Enlistar(Model.sedes) : null)
                )
       
            </li><li>
                <div class="editor-label">@Html.LabelFor(p => p.fechaFinConcesion)</div>
                @(Html.Kendo().DatePickerFor(p => p.fechaFinConcesion)
                .Min(DateTime.Now)
                .Max(new DateTime(2020, 12, 31))
                )
            </li>
                @Html.TextBoxFor(p => p.estado, "", new { style = "display:none;" })
        </ul>
        <div id="botones">
            <input type="button" value="Limpiar" id="Limpiar" onclick="location.href = '@(Url.Action("MantenerConcesionario", "Logistica"))'" />
            <input type="submit" value="@(Model == null || Model.id == 0 ? "Insertar" : "Modificar")" />
        </div> 
    }
</fieldset>

<div id="kendotable">
    @(Html.Kendo().Grid<Web.Models.Concesionario>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.nombre);
            columns.Bound(p => p.direccion);
            columns.Bound(p => p.ruc);
            columns.Bound(p => p.fechaFinConcesion).Format("{0:dd/MM/yyyy}");
            columns.Command(c => { c.Custom("Editar").Text("<span class='k-icon k-edit'></span>").Click("EditarConcesionario"); c.Destroy().Text(" "); });
        }
        )
        .Editable(editable => { editable.Mode(GridEditMode.InLine); editable.DisplayDeleteConfirmation("El regitro será eliminado ¿Desea continuar?"); })
        .Pageable()
        .Sortable()
        .Filterable(filterable => filterable
        .Operators(operators => operators
            .ForString(str => str.Clear()
                .Contains("Contiene")
                .StartsWith("Empezar con")
                .IsEqualTo("Es igual a")
                .IsNotEqualTo("Diferente a"))
            .ForNumber(number => number.Clear()
                .IsGreaterThan("Es mayor a")
                .IsLessThan("Es menor a")
                .IsEqualTo("Es igual a")
                .IsNotEqualTo("Es diferente a"))
        )
       )
       .DataSource(d => d.Ajax()
            .Read(r => r.Action("LeerConcesionario", "Logistica"))
            .Events(events => events.Error("ErrorMessage"))
            .Model(m => m.Id(p => p.id))
            .Destroy(a => a.Action("EliminarConcesionario", "Logistica"))
       )
       .Selectable()
    )
</div>

@if (ViewData["message"] != null)
{
    <script type="text/javascript">
        alert("@ViewData["message"]");
    </script>
}

<script type="text/javascript">

    $("#form").validate({
        rules: {
            nombre: {
                    required: true,
                    maxlength: 50
                },
            direccion: {
                    required: true,
                    maxlength: 150
                },
            ruc: {
                    required: true,
                    minlength: 11,
                    maxlength: 11,
                    digits: true
                },
            fechaFinConcesion: {
                required: true,
                date: true
            }
        },
        messages: {
			nombre: {
                required: "*Campo obligatorio",
                maxlength: "Tamaño máx. 50 caracteres"
                },
			direccion: {
                required: "*Campo obligatorio",
                maxlength: "Tamaño máx. 150 caracteres"
                },
			ruc: {
				required: "*Campo obligatorio",
                digits: "Ingrese solo dígitos",
                maxlength:"Ingrese 11 dígitos",
                minlength:"Ingrese 11 dígitos"
			},
            fechaFinConcesion: {
                required: "*Campo obligatorio",
                date: "Ingrese una fecha válida"
            }
        },
        submitHandler: function ConfirmationBox(form) {
        var result = confirm("¿Está seguro de realizar los cambios?");
        if (result == true) {
            form.submit();
            return true;
        }
        else {
            return false;
            }
        }
    });
    

    function ErrorMessage(e) {
        alert("No se pudo acceder a los datos de la tabla.");
    }

    function EditarConcesionario(e) {
        e.preventDefault();
        var grid = $('#Grid').data('kendoGrid');
        var row = grid.select();
        var dataItem = grid.dataItem(row);
        var id = dataItem.id;
        location = "@Url.Action("EditarConcesionario")" + "?id=" + id;
    }

</script>