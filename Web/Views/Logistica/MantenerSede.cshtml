@model Web.Models.Sede
@using Web.Models
@{
    ViewBag.Title = "Mantener sede";
}

<h1>@ViewBag.Title</h1>

<fieldset>
 <legend>Datos del Formulario</legend>
 @using (Html.BeginForm("agregarSede", "Logistica", FormMethod.Post, new {@id = "Form"}))
 {
  <form id="myform">
    <ul>
        <li>
            <div class="editor-label">@Html.LabelFor(p => p.id)</div>
            @Html.TextBoxFor(p => p.id, new {@readonly = "readonly" })
        </li><li>
            <div class="editor-label">@Html.LabelFor(p => p.nombre)</div>
            @Html.TextBoxFor(p => p.nombre)
        </li><li>
            <div class="editor-label">@Html.LabelFor(p => p.descripcion)</div>
            @Html.TextBoxFor(p => p.descripcion)
        </li><li>
            <div class="editor-label">@Html.LabelFor(p => p.direccion)</div>
            @Html.TextBoxFor(p => p.direccion)
        </li>
        @Html.TextBoxFor(p => p.estado, new { style = "display: none;" })
    </ul>
  <div id="botones">
  <input type="button" value= "Limpiar"  id="cancel" onclick="location.href = '@(Url.Action("MantenerSede", "Logistica"))'" class="button fright"/>
  <input type="submit" value=@(Model == null || Model.id == 0 ? "Insertar" : "Modificar") />
  </div>
        
        @if (ViewData["message"] == null)
        { }                                                                                                         
        else if (ViewData["message"].Equals("F"))
        {<script type="text/javascript">alert("Lo sentimos!\nNo se pudo realizar la operación.\nVuelva intentarlo en otro momento. ")</script> }
        else if (ViewData["message"].Equals("E"))
        { <script type="text/javascript">alert("La operación se realizó con éxito!")</script>} 
        else if (ViewData["message"].Equals("ELIMINA"))
        { <script type="text/javascript">alert("Lo sentimos!\nNo se puede eliminar esta Sede ya que tiene Ambientes o Bungalows habilitados en ella. ")</script>} 
        
 
 </form>
     
 }
  </fieldset>

<div id="kendotable">
@(Html.Kendo().Grid<Web.Models.Sede>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.nombre).Sortable(true).Title("Nombre")
            .Filterable(filterable => filterable.UI("nombreFiltro"));
        columns.Bound(p => p.descripcion).Sortable(true).Title("Descripcion")
            .Filterable(filterable => filterable.UI("descripcionFiltro"));
        columns.Bound(p => p.direccion).Title("Direccion");
        columns.Command(command => { command.Custom("Editar").Text("<span class='k-icon k-edit'></span>").Click("onChange"); command.Custom("Eliminar").Text("<span class='k-icon k-delete'></span>").Click("elimina"); }).Width(200);

    })
     .Editable(editable => { editable.Mode(GridEditMode.InLine); editable.DisplayDeleteConfirmation("El regitro será eliminado ¿Desea continuar?"); })
     .Pageable()
     .Selectable()
    .Filterable(filterable => filterable
        .Extra(false)
        .Operators(operators => operators
        .ForString(str => str.Clear()
            .Contains("Contiene")
            .StartsWith("Empezar con")
            .IsEqualTo("Es igual a")
            .IsNotEqualTo("Diferente a"))
        .ForNumber(number => number.Clear()
            .IsGreaterThan("Es mayor a")
            .IsLessThan("Es menor a")
            .IsEqualTo("Es igual a")
            .IsNotEqualTo("Es diferente a")))
        )
        .DataSource(datasource => datasource
                                    .Ajax()
                                        .Events(events => events.Error("ErrorMessage"))
                                        .Model(model => model.Id(p => p.id))
                                        .Read(read => read.Action("getSede", "Logistica"))
                                        .Destroy(update => update.Action("eliminarSede", "Logistica"))

                                     )
        )
</div>


<script type="text/javascript">

$("#Form").validate({
		rules: {
        	nombre: {
                required:true,
                maxlength:50
                },
			direccion:{
                required: true,
                maxlength:50
			    },
			descripcion:{
                required: true,
                maxlength:200
                }
		},
		messages: {
			nombre: {
                required:"*Campo obligatorio",
                maxlength:"Tamaño máx. 50 caracteres"
                },
			descripcion:{
                required:"*Campo obligatorio",
                maxlength:"Tamaño máx. 200 caracteres"
                },
			direccion:{
                required:"*Campo obligatorio",
                maxlength:"Tamaño máx. 50 caracteres"
                }
		},
		submitHandler: function ConfirmationBox(form) {
        var result = confirm("¿Está seguro de realizar los cambios?");
        if (result == true) {
            form.submit();
            return true;
        }
        else {
            return false;
            }
        }
		
});

function ErrorMessage(e) {
    alert("A ocurrido un error en el servidor!\nVuelva a intentar la operación en unos minutos...");
}


function onChange(e){
        e.preventDefault();
        var grid = $('#Grid').data('kendoGrid');
        var row = grid.select();
        var dataItem = grid.dataItem(row);
        var id = dataItem.id;
        location = "@Url.Action("modificarSede")" + "?id=" + id;
    }

function habilitar(e){
        e.preventDefault();
        var grid = $('#Grid').data('kendoGrid');
        var row = grid.select();
        var dataItem = grid.dataItem(row);
        var id = dataItem.id;
        location = "@Url.Action("habilitarSede")" + "?id=" + id;
    }

function elimina(e){
        e.preventDefault();
        var grid = $('#Grid').data('kendoGrid');
        var row = grid.select();
        var dataItem = grid.dataItem(row);
        var id = dataItem.id;
        location = "@Url.Action("eliminarSede")" + "?id=" + id;
    }

    function nombreFiltro(element) {
        element.kendoAutoComplete({
            dataSource: {
                transport: {
                    read: "@Url.Action("/FilterMenuCustomization_Nombre")"
                }
            }
        });
    }

    function descripcionFiltro(element) {
        element.kendoAutoComplete({
            dataSource: {
                transport: {
                    read: "@Url.Action("/FilterMenuCustomization_Descripcion")"
                }
            }
        });
    }
</script>