@model Web.Models.TemporadaAlta
@using Web.Models

@{
    ViewBag.Title = "Mantener Temporada Alta";
}

<h1>@ViewBag.Title</h1>

<fieldset>
    <legend>Datos del Formulario</legend>
    @using (Html.BeginForm("agregarTemporadaAlta", "Administracion", FormMethod.Post, new { @id = "Form" }))
    { 
        <form>
        <ul><li>
                <div class="editor-label">@Html.LabelFor(p => p.id)</div>
                @Html.TextBoxFor(p => p.id, new { @readonly = "readonly" })
            </li><li>
                <div class="editor-label">@Html.LabelFor(p => p.descripcion)</div>
                @Html.TextBoxFor(p => p.descripcion)
            </li><li>
            


            @*-------DATEPICKER-------*@
            <div class="editor-label">@Html.LabelFor(p => p.fechaInicio)</div>
            @(Html.Kendo().DatePickerFor(p => p.fechaInicio)
            .HtmlAttributes(new { style= "width:150px"})
                //.Name("start")
                .Min(new DateTime(1990, 1, 1))
                .Max(new DateTime(2020, 12, 31))
                //.Value(DateTime.Today)
                .Events(e => e.Change("startChange"))

            )
            
            </li><li>
            <div class="editor-label">@Html.LabelFor(p => p.fechaFin)</div>
            @(Html.Kendo().DatePickerFor(p => p.fechaFin)
            .HtmlAttributes(new { style = "width:150px" })
                //.Name("end")
                .Min(new DateTime(1990, 1, 1))
                .Max(new DateTime(2020, 12, 31))
                //.Value(DateTime.Today) 
                .Events(e => e.Change("endChange"))
            )
            </li>
        </ul>
             @Html.TextBoxFor(p => p.estado, new { style = "display: none;" })
             @Html.TextBoxFor(p => p.fechaInicio, new { style = "display: none;" })
             @Html.TextBoxFor(p => p.fechaFin, new { style = "display: none;" })
        <div id="botones">
        <input type="button" value= "Limpiar"  id="cancel" onclick="location.href = '@(Url.Action("MantenerTemporadaAlta", "Administracion"))'" class="button fright"/>
        <input type="submit" value=@(Model == null || Model.id == 0 ? "Insertar" : "Modificar" ) />
        </div>

        @if (ViewData["message"] != null)
        {
            <script type="text/javascript">
            alert("@ViewData["message"]");
            </script>
        }

                 </form>
    }
</fieldset>

  <div id="kendotable">
@(Html.Kendo().Grid<Web.Models.TemporadaAlta>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.descripcion).Sortable(true).Width(180);
        //.Filterable(filterable => filterable.UI("nombreFiltro"));
        columns.Bound(p => p.fechaInicio).Sortable(true).Width(180).Format("{0:dd/MM/yyyy}");
        //.Filterable(filterable => filterable.UI("areaFiltro"));
        columns.Bound(p => p.fechaFin).Width(180).Format("{0:dd/MM/yyyy}");
        columns.Command(command => { command.Custom("Editar").Click("onChange"); command.Custom("Eliminar").Click("elimina"); }).Width(181);

    })
     .Editable(editable => { editable.Mode(GridEditMode.InLine); editable.DisplayDeleteConfirmation("El regitro será eliminado ¿Desea continuar?"); })
     .Pageable()
     .Sortable()
     .Selectable()
     .Filterable(filterable => filterable
        .Extra(false)
        .Operators(operators => operators
            .ForString(str => str.Clear()
                .Contains("Contiene")
                .StartsWith("Empezar con")
                .IsEqualTo("Es igual a")
                .IsNotEqualTo("Diferente a"))
            .ForNumber(number => number.Clear()
                .IsGreaterThan("Es mayor a")
                .IsLessThan("Es menor a")
                .IsEqualTo("Es igual a")
                .IsNotEqualTo("Es diferente a"))
        )
    )
    .DataSource(datasource => datasource
        .Ajax()
        .Events(events => events.Error("ErrorMessage"))
        .Model(model => model.Id(p => p.id))
        .Read(read => read.Action("getTemporadaAlta", "Administracion"))
            .Destroy(update => update.Action("eliminarTemporadaAlta", "Administracion"))

    )
        
)
</div>


<script type="text/javascript">
jQuery.validator.addMethod("accept2", function(value, element, param) {
  return value.match(new RegExp("^" + param + "$"));
});


$("#Form").validate({
		rules: {
            descripcion: {
                required: true,
                maxlength: 150,
                accept2: "[a-zA-Z0-9 ñÑáéíóú]+"
                },
            fechaInicio:  {
                required: true
                //date: true
                },
            fechaFin: {
                required: true
                //date: true
                },

            },
		messages: {		
			descripcion: {
				required: "*Campo obligatorio",
                maxlength: "Ingrese 150 caracteres como máximo",
                accept2: "Solo se permiten numeros o letras"     
			    },
            fechaInicio: {
                 required: "*Campo obligatorio"
                 //date: "Ingrese una fecha valida"
                },
            fechaFin: {
                 required: "*Campo obligatorio"
                 //date: "Ingrese una fecha valida"  
                },
             
		},
        submitHandler: function ConfirmationBox(form) {
        var result = confirm("¿Está seguro de realizar los cambios?");
        if (result == true) {
            form.submit();
            return true;
        }
        else {
            return false;
            }
        }
		
});



    function startChange() {
        var endPicker = $("#end").data("kendoDatePicker"),
            startDate = this.value();
            $("#fechainicio").val(startDate.getDay().toString() + "/" + startDate.getMonth().toString() + "/" + startDate.getYear().toString());

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
        }
    }

    function endChange() {
        var startPicker = $("#start").data("kendoDatePicker"),
            endDate = this.value();
            $("#fechafin").val(endDate.getDate());

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
        }
    }

    function elimina(e){e.preventDefault();
    var grid = $('#Grid').data('kendoGrid');
    var row = grid.select();
    var dataItem = grid.dataItem(row);
    var id = dataItem.id;
    location = "@Url.Action("eliminarTemporadaAlta")" + "?id=" + id;}


    function ErrorMessage(e) {
        alert("A ocurrido un error en el servidor!\nVuelva a intentar la operación en unos minutos...");
    }

    function onChange(e){
    e.preventDefault();
    var grid = $('#Grid').data('kendoGrid');
    var row = grid.select();
    var dataItem = grid.dataItem(row);
    var id = dataItem.id;
    location = "@Url.Action("modificarTemporadaAlta")" + "?id=" + id;
}

    var start = $("#start").kendoDatePicker({
        change: startChange
    }).data("kendoDatePicker");

    var end = $("#end").kendoDatePicker({
        change: endChange
    }).data("kendoDatePicker");

    start.max(end.value());
    end.min(start.value());

</script>